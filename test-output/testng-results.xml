<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="13" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-31T12:18:25 IST" name="Loan Department" finished-at="2025-03-31T12:18:25 IST" duration-ms="185">
    <groups>
      <group name="Smoke">
        <method signature="day2.pLoan()[pri:0, instance:test.day2@55141def]" name="pLoan" class="test.day2"/>
        <method signature="day3.mobileLoginCarLoan()[pri:0, instance:test.day3@26794848]" name="mobileLoginCarLoan" class="test.day3"/>
        <method signature="day4.mobileLoginHomeLoan()[pri:0, instance:test.day4@752325ad]" name="mobileLoginHomeLoan" class="test.day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-03-31T12:18:25 IST" name="Car Loan" finished-at="2025-03-31T12:18:25 IST" duration-ms="103">
      <class name="test.day3">
        <test-method is-config="true" signature="beforClas()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforClas" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforClas -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforeEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileLoginCarLoan()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="mobileLoginCarLoan" finished-at="2025-03-31T12:18:25 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforeEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2025-03-31T12:18:25 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uday]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforeEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Noni]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforeEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2025-03-31T12:18:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Yoyo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method signature="webLoginCarLoan(java.lang.String)[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="webLoginCarLoan" finished-at="2025-03-31T12:18:25 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforeEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method signature="loginAPICarLoan()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="loginAPICarLoan" finished-at="2025-03-31T12:18:25 IST" depends-on-methods="test.day3.webLoginCarLoan, test.day3.mobileSignOutCarLoan" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPICarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="beforeEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterEvery" finished-at="2025-03-31T12:18:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="afterClas()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="afterClas" finished-at="2025-03-31T12:18:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClas -->
      </class> <!-- test.day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2025-03-31T12:18:25 IST" name="Personal Loan" finished-at="2025-03-31T12:18:25 IST" duration-ms="61">
      <class name="test.day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.day2@55141def]" started-at="2025-03-31T12:18:25 IST" name="prerequiste" finished-at="2025-03-31T12:18:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="pLoan()[pri:0, instance:test.day2@55141def]" started-at="2025-03-31T12:18:25 IST" name="pLoan" finished-at="2025-03-31T12:18:25 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="demo(java.lang.String,java.lang.String)[pri:0, instance:test.day1@692f203f]" started-at="2025-03-31T12:18:25 IST" name="demo" finished-at="2025-03-31T12:18:25 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalLoan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.day1@692f203f]" started-at="2025-03-31T12:18:25 IST" name="lastExecution" finished-at="2025-03-31T12:18:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-03-31T12:18:25 IST" name="Home Loan" finished-at="2025-03-31T12:18:25 IST" duration-ms="29">
      <class name="test.day4">
        <test-method signature="loginAPIHomeLoan()[pri:0, instance:test.day4@752325ad]" started-at="2025-03-31T12:18:25 IST" name="loginAPIHomeLoan" finished-at="2025-03-31T12:18:25 IST" duration-ms="13" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day4.loginAPIHomeLoan(day4.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPIHomeLoan -->
        <test-method signature="mobileLoginHomeLoan()[pri:0, instance:test.day4@752325ad]" started-at="2025-03-31T12:18:25 IST" name="mobileLoginHomeLoan" finished-at="2025-03-31T12:18:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method signature="webLoginHomeLoan()[pri:0, instance:test.day4@752325ad]" started-at="2025-03-31T12:18:25 IST" name="webLoginHomeLoan" finished-at="2025-03-31T12:18:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day3">
        <test-method is-config="true" signature="bfSuite()[pri:0, instance:test.day3@26794848]" started-at="2025-03-31T12:18:25 IST" name="bfSuite" finished-at="2025-03-31T12:18:25 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuite -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="afSuite()[pri:0, instance:test.day1@692f203f]" started-at="2025-03-31T12:18:25 IST" name="afSuite" finished-at="2025-03-31T12:18:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Home Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
